{"version":3,"sources":["assets/twitter-logo.svg","Components/Footer/index.jsx","container/index.jsx","App.js","index.js"],"names":["BUILD_SPACE_TWITTER_HANDLE","My_TWITTER_HANDLE","getTwitterLink","handler","Footer","className","alt","src","twitterLogo","href","target","rel","Date","getFullYear","solana","window","TEST_GIFS","Main","useState","walletAddress","setWalletAddress","inputValue","setInputValue","gifList","setGifList","checkIfWalletIsConnected","a","isPhantom","console","log","connect","onlyIfTrusted","response","publicKey","toString","alert","connectWallet","sendGif","length","onInputChange","event","value","useEffect","onLoad","addEventListener","removeEventListener","onSubmit","preventDefault","type","placeholder","onChange","map","gif","index","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b48f68be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter-logo.d89d9a86.svg\";","import React from \"react\";\nimport twitterLogo from \"../../assets/twitter-logo.svg\";\nimport \"./index.scss\";\n\n// Constants\nconst BUILD_SPACE_TWITTER_HANDLE = \"_buildspace\";\nconst My_TWITTER_HANDLE = \"imAagamJain\";\n\nconst getTwitterLink = (handler) => {\n  return `https://twitter.com/${handler}`;\n};\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-container__twitter_header\">\n        <div className=\"footer-container__twitter_header__container\">\n          <img\n            alt=\"Twitter Logo\"\n            className=\"footer-container__twitter_header__container__twitter-logo\"\n            src={twitterLogo}\n          />\n          <a\n            className=\"footer-container__twitter_header__container__footer-text\"\n            href={getTwitterLink(BUILD_SPACE_TWITTER_HANDLE)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${BUILD_SPACE_TWITTER_HANDLE}`}</a>\n        </div>\n        <div className=\"footer-container__twitter_header__container\">\n          <img\n            alt=\"Twitter Logo\"\n            className=\"footer-container__twitter_header__container__twitter-logo\"\n            src={twitterLogo}\n          />\n          <a\n            className=\"footer-container__twitter_header__container__footer-text\"\n            href={getTwitterLink(My_TWITTER_HANDLE)}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built by @${My_TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n      <div className=\"footer-container__copyright\">\n        <span>Made by Aagam &copy; {new Date().getFullYear()}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport { Footer } from \"../Components\";\nconst { solana } = window;\n\nconst TEST_GIFS = [\n  \"https://i.giphy.com/media/eIG0HfouRQJQr1wBzz/giphy.webp\",\n  \"https://media3.giphy.com/media/L71a8LW2UrKwPaWNYM/giphy.gif?cid=ecf05e47rr9qizx2msjucl1xyvuu47d7kf25tqt2lvo024uo&rid=giphy.gif&ct=g\",\n  \"https://media4.giphy.com/media/AeFmQjHMtEySooOc8K/giphy.gif?cid=ecf05e47qdzhdma2y3ugn32lkgi972z9mpfzocjj6z1ro4ec&rid=giphy.gif&ct=g\",\n  \"https://i.giphy.com/media/PAqjdPkJLDsmBRSYUp/giphy.webp\",\n];\n\nconst Main = () => {\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [gifList, setGifList] = useState([]);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            \"Connected with Public Key:\",\n            response.publicKey.toString()\n          );\n          setWalletAddress(response.publicKey.toString());\n        } else {\n          alert(\"Solana object not found! Get a Phantom Wallet\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const sendGif = async () => {\n    if (inputValue.length > 0) {\n      console.log(\"Gif link:\", inputValue);\n      setGifList([...gifList, inputValue]);\n      setInputValue(\"\");\n    } else {\n      console.log(\"Empty input. Try again.\");\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const onInputChange = (event) => {\n    const { value } = event.target;\n    setInputValue(value);\n  };\n\n  const renderConnectedContainer = () => (\n    <div className=\"connected-container\">\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          sendGif();\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Enter gif link!\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <button type=\"submit\" className=\"cta-button submit-gif-button\">\n          Submit\n        </button>\n      </form>\n      <div className=\"gif-grid\">\n        {gifList.map((gif, index) => (\n          <div className=\"gif-item\" key={`gif_${index}`}>\n            <img src={gif} alt={`gif_${index}`} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n\n  useEffect(() => {\n    if (walletAddress) {\n      console.log(\"Fetching GIF list...\");\n      setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]);\n\n  return (\n    <div className={walletAddress ? \"authed-container\" : \"container\"}>\n      <div className=\"header-container\">\n        <p className=\"header\">ðŸ–¼ GIFhub</p>\n        <p className=\"sub-text\">View your GIF collection in the metaverse âœ¨</p>\n        {walletAddress\n          ? renderConnectedContainer()\n          : renderNotConnectedContainer()}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\nimport Main from \"./container\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}